{{- $httpPort := "" }}
{{- $httpsPort := "" }}
{{- $ganPort := "" }}
{{- range .Values.service.ports }}
  {{- if eq .name "http" }}
    {{- $httpPort = .port }}
  {{- else if eq .name "https" }}
    {{- $httpsPort = .port }}
  {{- else if eq .name "gan" }}
    {{- $ganPort = .port }}
  {{- end }}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ignition.fullname" . }}
  labels:
    {{- include "ignition.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "ignition.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ignition.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ $httpPort }}
              protocol: TCP
            - name: https
              containerPort: {{ $httpsPort }}
              protocol: TCP
            - name: gan
              containerPort: {{ $ganPort }}
              protocol: TCP
          env:
            - name: GATEWAY_HTTP_PORT
              value: "{{ $httpPort }}"
            - name: GATEWAY_HTTPS_PORT
              value: "{{ $httpsPort }}"
            - name: GATEWAY_GAN_PORT
              value: "{{ $ganPort }}"
          {{- if .Values.eula.accepted }}
            - name: ACCEPT_IGNITION_EULA
              value: "Y"
          {{- end}}
          {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
          {{- end }}
          livenessProbe:
            httpGet:
              path: /StatusPing
              port: http
          readinessProbe: # Check for RUNNING status
            exec:
              command:
                - sh
                - -c
                - 'curl -sf http://localhost:{{ $httpPort }}/StatusPing | grep -q RUNNING'
            initialDelaySeconds: 10
            periodSeconds: 5
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}