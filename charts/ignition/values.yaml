# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: inductiveautomation/ignition
  tag: 8.1.47
  pullPolicy: IfNotPresent

# Environment variables here are set for the Ignition Gateway, add as needed
# More information can be found here: https://www.docs.inductiveautomation.com/docs/8.1/platform/docker-image#environment-variables
env:
  ACCEPT_IGNITION_EULA: "N" # Accept the EULA https://inductiveautomation.com/ignition/license
  IGNITION_EDITION: "standard" 
  GATEWAY_ADMIN_PASSWORD: "password"

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  type: ClusterIP # Use NodePort if ingress is enabled
  port: 8088
  targetPort: 8088 # Will also set GATEWAY_HTTP_PORT env var
  # nodePort: 30080 # Use with NodePort

ingress:
  enabled: false
  className: traefik
  annotations: {}
  hosts:
    - host: ignition.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /StatusPing
    port: http
readinessProbe: # Check for RUNNING status
  exec:
    command:
      - sh
      - -c
      - 'curl -sf http://localhost:8088/StatusPing | grep -q RUNNING'
  initialDelaySeconds: 10
  periodSeconds: 5